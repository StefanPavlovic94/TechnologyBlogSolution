@model TechnologyBlogSolution.ViewModels.PostModels.PostsPartialView
@using TechnologyBlogSolution.Models.DTO;
<div class="col-md-12" style="margin-bottom:3%; padding-left:0px">
    @foreach (var post in Model.Posts)
    {
        <div class="card" style="margin-bottom:5%">
            <div class="card-header">
                    <span>
                        @Html.ActionLink("Edit", "EditPost", "Post", new { post.Id }, new { @class = "btn btn-primary btn-sm" })
                        @Html.ActionLink("Delete", "DeletePost", "Post", new { post.Id }, new { @class = "btn btn-danger btn-sm" })
                        @Html.ActionLink("Open", "Open", "Post", new { post.Id }, new { @class = "btn btn-success btn-sm" })
                    </span>
                <div id="vote-container-@post.Id">
                    @switch (post.CurrenUserVote)
        {
            case CurrentUserVoted.NotVoted:
                <input style="float:right; width:3%; height:3%;" type="image" onclick="Downvote(@post.Id)" value="@post.DownvotesCount" src="~/Root/Downvote.png" />
                <input style="float:right; width:3%;height:3%;" type="image" onclick="Upvote(@post.Id)" value="@post.UpvotesCount" src="~/Root/Upvote.png" />
    break;
case CurrentUserVoted.Upvote:
            <input style="float:right; width:3%;height:3%;" type="image" onclick="Downvote(@post.Id)" value="@post.DownvotesCount" src="~/Root/Downvote.png"/>

break;
case CurrentUserVoted.Downvote:
            <input style="float:right; width:3%;height:3%;" type="image" onclick="Upvote(@post.Id)" value="@post.UpvotesCount" src="~/Root/Upvote.png"/>
break;
}
                </div>
            </div>
            <div class="card-body">
                <h5 class="card-title">@post.Name</h5>
                <p class="card-text">@post.Content</p>
            </div>
            <div class="card-footer text-muted">
                <div class="row">
                    <div class="col-md-6">
                        <div style="float:left">@post.Timestamp</div>
                        <div style="float:right">@post.Author.Name</div>
                    </div>
     
                </div>
            </div>
        </div>
    }
    <span>
        @for (int i = 0; i < Model.NumberOfPages; i++)
        {
            if (Model.CurrentPage == i)
            {
                <input type="button" class="btn btn-success btn-sm" value="@i" onclick="getPostsForPage(@i)" />
            }
            else
            {
                <input type="button" class="btn btn-primary btn-sm" value="@i" onclick="getPostsForPage(@i)" />
            }
        }
    </span>
</div>

<script>
    function Upvote(postId) {
        $.ajax({
            "url": "/Post/Upvote/" + postId,
            "type": "Post",
            success: function () {
                $(`#vote-container-${postId}`).empty();

                jQuery('<input/>', {
                    type: "image",
                    onclick: `Downvote(${postId})`,
                    src: "/Root/Downvote.png",
                    style: "float:right; width:3%;height:3%;"
                }).appendTo(`#vote-container-${postId}`);
            }
        })
    }

    function Downvote(postId) {
        $.ajax({
            "url": "/Post/Downvote/" + postId,
            "type": "Post",
            success: function () {
                $(`#vote-container-${postId}`).empty();

                jQuery('<input/>', {
                    type: "image",
                    onclick: `Upvote(${postId})`,
                    src:"/Root/Upvote.png",
                    style: "float:right; width:3%;height:3%;"
                }).appendTo(`#vote-container-${postId}`);
            }
        })
    }
</script>